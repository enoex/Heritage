### Entity - Component - System ###
I've been working on a couple games lately, in part motivated by the [One Game a Month](http://www.onegameamonth.com/enoex) "contest". It's good motivatation if you're interested in making games and I suggest you check it out. So, I've been thinking a lot about browser gaming for a while, and figuring out how to steal ideas from the game dev industry to apply them to web based gaming.  Specifically, programming design patterns. There's a wealth of information about game programming, such as [Game Programming Gems](http://www.gameprogramminggems.com/).  There's also a good amount of HTML5 related game design information, such as [Build New Games](http://buildnewgames.com/) and [Udacity's HTML5 Game Dev Course](https://www.udacity.com/course/cs255).


While exploring different design concepts, *Entity - Component - System* (ECS) came up over and over.  It's a more data driven approach to programming and often solves problems of game programming better than traditional Object Oriented Programming (OOP) approcahes do.  This article is about how I've implemented ECS with Javascript, my understanding of it, and some of the struggles and benefits it has provided to me.

## Entity Component System ##
