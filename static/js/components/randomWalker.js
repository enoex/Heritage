// Generated by CoffeeScript 1.4.0
(function() {

  define(['components/vector', 'components/physics', 'lib/d3'], function(Vector, Physics, d3) {
    var RandomWalker;
    RandomWalker = (function() {

      function RandomWalker(entity, params) {
        params = params || {};
        this.entity = entity;
        return this;
      }

      RandomWalker.prototype.cosLookup = {};

      RandomWalker.prototype.sinLookup = {};

      RandomWalker.prototype.walkForce = function(futureDistance, radius) {
        var cos, cosLookup, force, futurePosition, randomAngle, scale, sin, sinLookup, target, x, y;
        futureDistance = futureDistance || 40;
        radius = radius || 30;
        futurePosition = this.entity.components.position.copy();
        futurePosition.normalize();
        if (futurePosition.magnitude() < 0.1) {
          futurePosition.add(new Vector((Math.random() * 3 | 0) - 1 || 1, (Math.random() * 3 | 0) - 1 || 1));
        }
        futurePosition.multiply(futureDistance);
        scale = d3.scale.linear().domain([0, 1]).range([0, 360]);
        randomAngle = Math.random() * 361 | 0;
        cosLookup = RandomWalker.prototype.cosLookup;
        if (!cosLookup[randomAngle]) {
          cosLookup[randomAngle] = Math.cos(randomAngle);
        }
        cos = cosLookup[randomAngle];
        sinLookup = RandomWalker.prototype.sinLookup;
        if (!sinLookup[randomAngle]) {
          sinLookup[randomAngle] = Math.sin(randomAngle);
        }
        sin = sinLookup[randomAngle];
        x = radius * cos;
        y = radius * sin;
        target = new Vector(x, y);
        target.add(this.entity.components.position);
        force = Physics.prototype.seekForce.call(this.entity.components.physics, target);
        return force;
      };

      return RandomWalker;

    })();
    return RandomWalker;
  });

}).call(this);
