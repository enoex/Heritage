// Generated by CoffeeScript 1.4.0
(function() {

  define(['lib/d3'], function(d3) {
    var Human;
    Human = (function() {

      function Human(entity, params) {
        params = params || {};
        this.entity = entity;
        this.age = params.age || 0.1;
        this.isDead = false;
        this.resources = params.resources || 100;
        this.sex = ['male', 'female'][Math.random() * 2 | 0];
        this.isPregnant = false;
        this.pregnancyChance = Math.round(Math.random() * 100) / 100;
        this.gestationLength = 0.9;
        this.gestationTimeLeft = 0;
        this.mateId = null;
        this.children = [];
        this.family = [];
        this.hasZombieInfection = false;
        this.infectionScale = d3.scale.linear().domain([0, 100]).range([0.3, 0.001]).clamp(true);
        this.strength = Math.random() * 20 | 0;
        this.agility = Math.random() * 20 | 0;
      }

      Human.prototype.calculateHealth = function(health) {
        if (this.resources < 0) {
          health -= 0.1 + Math.abs(this.resources * 0.02);
        }
        if (this.age > 70) {
          health -= 0.1 + (this.age * 0.005);
        }
        if (this.age > 100) {
          if (Math.random() < 0.1) {
            health = -1;
          }
        }
        if (this.hasZombieInfection) {
          health -= 5;
        }
        return health;
      };

      Human.prototype.getIsDead = function(health) {
        if (health <= 0) {
          this.isDead = true;
        }
        return this.isDead;
      };

      Human.prototype.getInfectionChance = function(health, damageTaken) {
        var chance;
        chance = this.infectionScale(health);
        if (this.age > 70) {
          chance += 0.2;
        }
        chance += damageTaken * 0.001;
        return chance;
      };

      Human.prototype.calculateResources = function() {
        var resources;
        resources = this.resources;
        if (this.age < 20) {
          resources -= 0.05 + ((20 - this.age) / 26);
        } else if (this.age > 60) {
          resources -= 0.2 + (this.age * 0.001);
        } else {
          resources -= 0.10;
          if (this.isPregnant) {
            resources -= 0.10;
          }
        }
        return resources;
      };

      Human.prototype.getMaxSpeed = function() {
        var maxSpeed;
        maxSpeed = 0;
        if (this.age < 2) {
          maxSpeed = 2;
        } else if (this.age < 10) {
          maxSpeed = 4;
        } else if (this.age < 60) {
          maxSpeed = 8;
        } else if (this.age < 70) {
          maxSpeed = 3;
        } else {
          maxSpeed = 2;
        }
        return maxSpeed;
      };

      return Human;

    })();
    return Human;
  });

}).call(this);
