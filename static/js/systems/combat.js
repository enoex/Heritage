// Generated by CoffeeScript 1.4.0
(function() {

  define([], function() {
    var Combat;
    Combat = (function() {

      function Combat(entities) {
        this.entities = entities;
        return this;
      }

      Combat.prototype.getNeighbors = function(entity) {
        var creatureType, neighbor, neighbors, _i, _len, _ref;
        neighbors = {
          zombie: [],
          human: []
        };
        _ref = entity.components.world.getNeighbors(entity.components.combat.range);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          neighbor = _ref[_i];
          if (neighbor.hasComponent('zombie')) {
            creatureType = 'zombie';
          } else if (neighbor.hasComponent('human')) {
            creatureType = 'human';
          }
          if (neighbor !== entity) {
            neighbors[creatureType].push(neighbor);
          }
        }
        return neighbors;
      };

      Combat.prototype.tick = function(delta) {
        var damageStack, entity, id, isHuman, isZombie, neighbors, _ref;
        damageStack = [];
        _ref = this.entities.entitiesIndex['combat'];
        for (id in _ref) {
          entity = _ref[id];
          isHuman = entity.hasComponent('human');
          isZombie = entity.hasComponent('zombie');
          if (isHuman || isZombie) {
            neighbors = this.getNeighbors(entity);
            if (isHuman && neighbors.zombie.length > 0) {
              entity.components.health.health = 10;
              entity.components.human.resources = 0;
              entity.components.human.hasZombieInfection = true;
            } else if (isZombie && neighbors.human.length > 0) {
              entity.components.health.health = 10;
              entity.components.zombie.resources += 20;
            }
          }
        }
        return this;
      };

      return Combat;

    })();
    return Combat;
  });

}).call(this);
