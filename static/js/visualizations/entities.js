// Generated by CoffeeScript 1.4.0
(function() {
  var drawChart, socket;

  socket = io.connect('http://localhost:1337');

  socket.on('returnedLogData', function(data) {
    console.log(data);
    return drawChart(data);
  });

  drawChart = function(data) {
    var dataMax, dataMin, height, lineGroups, lines, svgEl, type, width, xScale, yScale, _fn, _i, _len, _ref;
    svgEl = d3.select('#chart-main');
    svgEl.select('*').remove();
    width = svgEl.attr('width');
    height = svgEl.attr('height');
    dataMin = d3.min(data, function(d) {
      return 0;
    });
    dataMax = d3.max(data, function(d) {
      return d.entityCounts.all;
    });
    xScale = d3.scale.linear().domain([0, data.length]).rangeRound([0, width]);
    yScale = d3.scale.linear().domain([dataMin, dataMax]).range([height, 0]);
    lines = {};
    _ref = ['all', 'human', 'zombie'];
    _fn = function(type) {
      return lines[type] = d3.svg.line().x(function(d, i) {
        return xScale(i);
      }).y(function(d) {
        return yScale(d.entityCounts[type]);
      }).interpolate('linear');
    };
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      type = _ref[_i];
      _fn(type);
    }
    lineGroups = svgEl.append('svg:g');
    lineGroups.append('svg:path').data([data]).attr({
      d: lines.all
    }).style({
      fill: 'none',
      stroke: '#343434'
    });
    lineGroups.append('svg:path').data([data]).attr({
      d: lines.human
    }).style({
      fill: 'none',
      stroke: '#336699'
    });
    lineGroups.append('svg:path').data([data]).attr({
      d: lines.zombie
    }).style({
      fill: 'none',
      stroke: '#dd2222'
    });
    return true;
  };

  socket.emit('getLogData');

}).call(this);
